import { __export } from './5ZKAE4VZ.js';

// src/math.ts
var math_exports = {};
__export(math_exports, {
  between: () => between,
  bounce: () => bounce,
  clamp: () => clamp,
  mapRange: () => mapRange,
  numberEquals: () => numberEquals,
  random: () => random,
  randomFrom: () => randomFrom,
  randomInt: () => randomInt,
  randomIntFrom: () => randomIntFrom,
  rangesIntersecting: () => rangesIntersecting,
  remainder: () => remainder,
  toPercent: () => toPercent,
  wrap: () => wrap
});
var random = (max) => Math.random() * max;
var randomFrom = (min, max) => Math.random() * (max - min) + min;
var randomInt = (max) => Math.floor(Math.random() * max);
var randomIntFrom = (min, max) => Math.floor(Math.random() * (max - min)) + min;
var clamp = (value, min, max) => Math.min(Math.max(value, min), max);
var remainder = (a, b) => (a % b + b) % b;
var wrap = (value, min, max) => remainder(value - min, max - min) + min;
var bounce = (value, min, max) => {
  const range = max - min, rem = wrap(value - min, 0, 2 * range), distance = Math.abs(rem - range);
  return max - distance;
};
var mapRange = (value, in_min, in_max, out_min, out_max) => (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
var toPercent = (value, min, max) => (value - min) / (max - min);
var numberEquals = (a, b) => Math.abs(a - b) < Number.EPSILON;
var between = (a, b, c) => {
  if (a > c)
    [a, c] = [c, a];
  return a - Number.EPSILON <= b && b <= c + Number.EPSILON;
};
var rangesIntersecting = (a1, b1, a2, b2) => {
  if (a1 > b1)
    [a1, b1] = [b1, a1];
  if (a2 > b2)
    [a2, b2] = [b2, a2];
  return a1 <= b2 && a2 <= b1;
};

export { between, bounce, clamp, mapRange, math_exports, numberEquals, random, randomFrom, randomInt, randomIntFrom, rangesIntersecting, remainder, toPercent, wrap };
