import {
  interceptPropertySet
} from "./chunk-N66PAN75.js";

// src/detect.ts
var DATA_HYDRATION_KEY = "data-hk";
var SOLID_DEV_GLOBAL = "Solid$$";
async function detectSolid() {
  if (detectSolidDev())
    return true;
  const $hy = window._$HY;
  if ($hy && typeof $hy === "object" && "completed" in $hy && $hy.completed instanceof WeakSet)
    return true;
  const bodyFirstEl = document.body.firstElementChild;
  if (bodyFirstEl && bodyFirstEl.hasAttribute(DATA_HYDRATION_KEY))
    return true;
  const scripts = document.querySelectorAll("script");
  const attributeHydrateKeyNameRegex = new RegExp(
    `(?:has|get)Attribute\\(["']${DATA_HYDRATION_KEY}["']\\)`
  );
  for (const script of scripts) {
    if (script.textContent?.match(attributeHydrateKeyNameRegex))
      return true;
    if (script.type !== "module" || script.crossOrigin !== "anonymous" || script.src.match(/^chrome-extension/))
      continue;
    const result = await fetch(script.src);
    const text = await result.text();
    if (text.match(/\$DX_DELEGATE/) || text.match(attributeHydrateKeyNameRegex))
      return true;
  }
  return false;
}
function detectSolidDev() {
  return !!window[SOLID_DEV_GLOBAL];
}
function onSolidDevDetect(callback) {
  if (detectSolidDev())
    queueMicrotask(callback);
  else
    interceptPropertySet(
      window,
      SOLID_DEV_GLOBAL,
      (value) => value === true && queueMicrotask(callback)
    );
}
var SOLID_DEVTOOLS_GLOBAL = "SolidDevtools$$";
function detectSolidDevtools() {
  return !!window[SOLID_DEVTOOLS_GLOBAL];
}
function onSolidDevtoolsDetect(callback) {
  if (detectSolidDevtools())
    queueMicrotask(callback);
  else
    interceptPropertySet(
      window,
      SOLID_DEVTOOLS_GLOBAL,
      (value) => value && queueMicrotask(callback)
    );
}
export {
  DATA_HYDRATION_KEY,
  SOLID_DEVTOOLS_GLOBAL,
  SOLID_DEV_GLOBAL,
  detectSolid,
  detectSolidDev,
  detectSolidDevtools,
  onSolidDevDetect,
  onSolidDevtoolsDetect
};
